# data file for the Fltk User Interface Designer (fluid)
version 1.0304
header_name {.h}
code_name {.cc}
comment {Copyright 2011, Alan Calvert
Copyright 2015-2017, Will Godfrey

This file is part of yoshimi, which is free software: you can
redistribute it and/or modify it under the terms of the GNU General
Public License as published by the Free Software Foundation, either
version 2 of the License, or (at your option) any later version.

yoshimi is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with yoshimi.  If not, see <http://www.gnu.org/licenses/>.

Updated July 2017.} {in_source in_header
}

decl {\#include <set>} {public local
}

decl {\#include <string>} {public local
}

decl {\#include "FL/Fl_Text_Display.H"} {public local
}

decl {using namespace std;} {public local
}

decl {\#include "Misc/Config.h"} {private global
}

decl {\#include "MasterUI.h"} {private global
}

class ConsoleTextDisplay {: {public Fl_Text_Display}
} {
  Function {ConsoleTextDisplay(int x, int y, int w, int h, char* l = 0) : Fl_Text_Display(x,y,w,h,l)} {} {
    code {// empty //} {}
  }
  Function {scroll_to_last_line()} {return_type void
  } {
    code {//
    if(mVScrollBar->visible() &&
       mVScrollBar->value() > mNBufferLines - mNVisibleLines)
    {
        insert_position(mBuffer->length());
        show_insert_position();
    }} {}
  }
}

class ConsoleUI {} {
  Function {make_window(void)} {} {
    Fl_Window logConsole {
      label {yoshimi console}
      callback {o->hide()}
      xywh {5 20 385 185} type Double color 54 selection_color 36 labelsize 13 align 0 when 1 hide resizable
    } {
      Fl_Text_Display logText {
        xywh {0 0 385 185} color 54 labeltype NO_LABEL labelsize 13 when 1 textfont 4 textsize 12 textcolor 35
        class ConsoleTextDisplay
      }
    }
  }
  Function {ConsoleUI()} {} {
    code {//
    bufsize = 8192;
    make_window();
    txtbuf = new Fl_Text_Buffer(bufsize);
    logText->buffer(txtbuf);} {}
  }
  Function {Show()} {} {
    code {logConsole->show();} {}
  }
  Function {Hide()} {} {
    code {logConsole->hide();} {}
  }
  Function {~ConsoleUI()} {} {
    code {logConsole->hide();
      if (NULL != txtbuf)
        delete txtbuf;} {}
  }
  Function {log(string msg)} {} {
    code {//
    msg += "\\n";
    txtbuf->append(msg.c_str());
    //Scroll to show last line unless manually scrolled elsewhere before
    logText->scroll_to_last_line();
    if (txtbuf->length() > (bufsize - 256))
        txtbuf->remove(0, txtbuf->line_end(256));} {}
  }
  decl {Fl_Text_Buffer *txtbuf;} {private local
  }
  decl {int bufsize;} {private local
  }
}
